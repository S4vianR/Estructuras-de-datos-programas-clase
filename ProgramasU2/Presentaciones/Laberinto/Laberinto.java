public class Laberinto {

    private char[][] tablero = {
            { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
            { '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#', ' ', ' ', ' ', ' ', '#', ' ', ' ', '#' },
            { '#', ' ', '#', ' ', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', '#', ' ', '#', '#' },
            { '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', ' ', '#', '#' },
            { '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#' },
            { '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', '#', '#', '#', '#' },
            { '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', '#', ' ', '#', '#', '#', '#' },
            { '#', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#', '#', ' ', ' ', ' ', '#', '#' },
            { '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', '#', '#', '#', ' ', '#', '#' },
            { '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', '#', ' ', '#', '#' },
            { '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', ' ', '#', '#', ' ', '#', ' ', ' ', '#', ' ', '#', '#' },
            { '#', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', '#', '#', '#', '#', ' ', ' ', '#' },
            { '#', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#' },
            { '#', ' ', ' ', ' ', ' ', '#', '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#' },
            { '#', '#', '#', '#', ' ', '#', ' ', ' ', '#', '#', ' ', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#' },
            { '#', ' ', ' ', '#', ' ', '#', ' ', '#', '#', ' ', ' ', ' ', '#', '#', '#', ' ', '#', ' ', ' ', ' ', 'S' },
            { '#', ' ', '#', '#', ' ', '#', ' ', '#', '#', ' ', '#', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#' },
            { '#', ' ', '#', ' ', ' ', '#', ' ', '#', '#', ' ', '#', '#', '#', ' ', ' ', ' ', ' ', '#', ' ', ' ', '#' },
            { '#', ' ', '#', ' ', '#', '#', ' ', ' ', ' ', ' ', '#', ' ', '#', ' ', '#', '#', ' ', '#', '#', ' ', '#' },
            { '#', ' ', ' ', ' ', '#', ' ', ' ', '#', '#', '#', '#', ' ', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', '#' },
            { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' }
    };

    /*
     * private char[][] tablero={
     * {'#','#','#','#','#','#',},
     * {'#',' ','#',' ','#','#',},
     * {'#',' ',' ',' ',' ','#',},
     * {'#',' ','#','#','#','S',},
     * {'#',' ','#','#',' ','#',},
     * {'#',' ',' ',' ',' ','#',},
     * {'#','#','#','#','#','#',}
     * };
     */

    private void imprimirTab() {
        try {
            Thread.sleep(700);
        } catch (InterruptedException e) {

        }
        System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        for (int i = 0; i < tablero.length; i++) {
            for (int j = 0; j < tablero[0].length; j++) {
                if (tablero[i][j] == '*') {
                    System.out.print("\u001B[31m" + tablero[i][j] + "\u001B[31m" + " ");
                } else {
                    System.out.print("\u001B[30m" + tablero[i][j] + "\u001B[30m" + " ");
                }
            }
            System.out.println("");
        }
        System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
    }

    private boolean buscarSal(int x, int y) {
        if (tablero[x][y] == 'S') {
            return true;
        }
        if (tablero[x][y] == '#' || tablero[x][y] == '*') {
            return false;
        }

        tablero[x][y] = '*';
        imprimirTab();
        boolean cam;

        cam = buscarSal(x, y + 1);
        if (cam) {
            return true;
        }

        cam = buscarSal(x, y - 1);
        if (cam) {
            return true;
        }

        cam = buscarSal(x + 1, y);
        if (cam) {
            return true;
        }

        cam = buscarSal(x - 1, y);
        if (cam) {
            return true;
        }

        tablero[x][y] = ' ';
        imprimirTab();
        return false;
    }

    public static void main(String[] args) {
        Laberinto tab = new Laberinto();
        if (tab.buscarSal(1, 1)) {
            System.out.println("Se logro acabar el laberinto de manera satisfactoria");
        } else {
            System.out.println("El laberinto no tiene salida o coloco el punto de partida en pared");
        }
    }
}